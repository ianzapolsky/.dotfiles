# configure bash prompt

RED_ESC='\[\e[31;40m\]'
GREEN_ESC='\[\e[32;40m\]'
YELLOW_ESC='\[\e[33;40m\]'
BLUE_ESC='\[\e[34;40m\]'
PURPLE_ESC='\[\e[35;40m\]'
CYAN_ESC='\[\e[36;40m\]'
RESET='\[\e[0m\]'

function parse_git_dirty {
  [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit, working directory clean" && $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && echo "*"
}

function parse_git_branch {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

function git_check_branch {
  if [[ -n $(git branch 2> /dev/null) ]]
    then
      echo $(parse_git_branch)
  else
    echo -e '\xe2\x9c\x96'
  fi
}

function prompt_command {
  [ -S $SSH_AUTH_SOCK ] || export SSH_AUTH_SOCK=$(find /tmp/ssh*/agent.* -user $LOGNAME | xargs ls -1rt | tail -1)
  export PS1="${BLUE_ESC}|-[ ${YELLOW_ESC}\H${BLUE_ESC} ]─[ ${PURPLE_ESC}\u${BLUE_ESC} ]─[ ${GREEN_ESC}\W${BLUE_ESC} ]─[ ${CYAN_ESC}\$(git_check_branch)${BLUE_ESC} ]\n|-> $RESET"
}

export PROMPT_COMMAND=prompt_command

